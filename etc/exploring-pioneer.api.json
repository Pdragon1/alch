{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.5",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "exploring-pioneer!",
  "docComment": "",
  "name": "exploring-pioneer",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "exploring-pioneer!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "exploring-pioneer!Alchemy:class",
          "docComment": "/**\n * The Alchemy SDK client. This class holds config information and must be passed into SDK methods.\n *\n * Do not call this constructor directly. Instead, use {@link initializeAlchemy} to get an instance of the SDK.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Alchemy "
            }
          ],
          "releaseTag": "Public",
          "name": "Alchemy",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Alchemy#apiKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly apiKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "exploring-pioneer!Alchemy#getProvider:member(1)",
              "docComment": "/**\n * Lazy loads the ethers provider and creates an AlchemyProvider instance.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProvider(): "
                },
                {
                  "kind": "Content",
                  "text": "providers."
                },
                {
                  "kind": "Reference",
                  "text": "AlchemyProvider",
                  "canonicalReference": "@ethersproject/providers!AlchemyProvider:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getProvider"
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Alchemy#maxRetries:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly maxRetries: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxRetries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Alchemy#network:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "network: "
                },
                {
                  "kind": "Reference",
                  "text": "Network",
                  "canonicalReference": "exploring-pioneer!Network:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "exploring-pioneer!Alchemy#setNetwork:member(1)",
              "docComment": "/**\n * Changes the network that the SDK requests data from.\n *\n * @param network - The network to change to.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNetwork(network: "
                },
                {
                  "kind": "Reference",
                  "text": "Network",
                  "canonicalReference": "exploring-pioneer!Network:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "network",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setNetwork"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!AlchemyConfig:interface",
          "docComment": "/**\n * Options object used to configure the Alchemy SDK.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AlchemyConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "AlchemyConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AlchemyConfig#apiKey:member",
              "docComment": "/**\n * The Alchemy API key that can be found in the Alchemy dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AlchemyConfig#maxRetries:member",
              "docComment": "/**\n * The maximum number of retries to attempt if a request fails. Defaults to 5.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxRetries?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxRetries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AlchemyConfig#network:member",
              "docComment": "/**\n * The name of the network.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "network?: "
                },
                {
                  "kind": "Reference",
                  "text": "Network",
                  "canonicalReference": "exploring-pioneer!Network:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "exploring-pioneer!AssetTransfersCategory:enum",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AssetTransfersCategory "
            }
          ],
          "releaseTag": "Public",
          "name": "AssetTransfersCategory",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.ERC1155:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ERC1155 = "
                },
                {
                  "kind": "Content",
                  "text": "\"erc1155\""
                }
              ],
              "releaseTag": "Public",
              "name": "ERC1155",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.ERC20:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ERC20 = "
                },
                {
                  "kind": "Content",
                  "text": "\"erc20\""
                }
              ],
              "releaseTag": "Public",
              "name": "ERC20",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.ERC721:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ERC721 = "
                },
                {
                  "kind": "Content",
                  "text": "\"erc721\""
                }
              ],
              "releaseTag": "Public",
              "name": "ERC721",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.EXTERNAL:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EXTERNAL = "
                },
                {
                  "kind": "Content",
                  "text": "\"external\""
                }
              ],
              "releaseTag": "Public",
              "name": "EXTERNAL",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.INTERNAL:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "INTERNAL = "
                },
                {
                  "kind": "Content",
                  "text": "\"internal\""
                }
              ],
              "releaseTag": "Public",
              "name": "INTERNAL",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.SPECIALNFT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SPECIALNFT = "
                },
                {
                  "kind": "Content",
                  "text": "\"specialnft\""
                }
              ],
              "releaseTag": "Public",
              "name": "SPECIALNFT",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersCategory.TOKEN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TOKEN = "
                },
                {
                  "kind": "Content",
                  "text": "\"token\""
                }
              ],
              "releaseTag": "Public",
              "name": "TOKEN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "exploring-pioneer!AssetTransfersOrder:enum",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AssetTransfersOrder "
            }
          ],
          "releaseTag": "Public",
          "name": "AssetTransfersOrder",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersOrder.ASCENDING:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ASCENDING = "
                },
                {
                  "kind": "Content",
                  "text": "\"asc\""
                }
              ],
              "releaseTag": "Public",
              "name": "ASCENDING",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!AssetTransfersOrder.DESCENDING:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DESCENDING = "
                },
                {
                  "kind": "Content",
                  "text": "\"desc\""
                }
              ],
              "releaseTag": "Public",
              "name": "DESCENDING",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!AssetTransfersParams:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AssetTransfersParams "
            }
          ],
          "releaseTag": "Public",
          "name": "AssetTransfersParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#category:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "category?: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetTransfersCategory",
                  "canonicalReference": "exploring-pioneer!AssetTransfersCategory:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "category",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#contractAddresses:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddresses?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractAddresses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#excludeZeroValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "excludeZeroValue?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "excludeZeroValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#fromAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromAddress?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fromAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#fromBlock:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromBlock?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fromBlock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#maxCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxCount?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#order:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "order?: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetTransfersOrder",
                  "canonicalReference": "exploring-pioneer!AssetTransfersOrder:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "order",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#pageKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#toAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toAddress?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "toAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams#toBlock:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBlock?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "toBlock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!AssetTransfersResponse:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AssetTransfersResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "AssetTransfersResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResponse#pageKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResponse#transfers:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transfers: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetTransfersResult",
                  "canonicalReference": "exploring-pioneer!AssetTransfersResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "transfers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!AssetTransfersResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AssetTransfersResult "
            }
          ],
          "releaseTag": "Public",
          "name": "AssetTransfersResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#asset:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "asset: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "asset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#blockNum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockNum: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blockNum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#category:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "category: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetTransfersCategory",
                  "canonicalReference": "exploring-pioneer!AssetTransfersCategory:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "category",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#erc1155Metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "erc1155Metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "ERC1155Metadata",
                  "canonicalReference": "exploring-pioneer!ERC1155Metadata:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "erc1155Metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#erc721TokenId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "erc721TokenId: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "erc721TokenId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#from:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "from: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "from",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#hash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hash: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#rawContract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawContract: "
                },
                {
                  "kind": "Reference",
                  "text": "RawContract",
                  "canonicalReference": "exploring-pioneer!RawContract:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawContract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#to:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "to: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "to",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#tokenId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenId: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!AssetTransfersResult#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "exploring-pioneer!BaseNft:class",
          "docComment": "/**\n * Alchemy representation of a base NFT that doesn't contain metadata.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BaseNft "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseNft",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "exploring-pioneer!BaseNft:constructor(1)",
              "docComment": "/**\n * This constructor should never be called directly. All Nft instances should be created from a backend response via the `fromResponse` method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected constructor(address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", \n    tokenId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", \n    tokenType: "
                },
                {
                  "kind": "Reference",
                  "text": "NftTokenType",
                  "canonicalReference": "exploring-pioneer!NftTokenType:enum"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tokenId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "tokenType",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!BaseNft#contract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly contract: "
                },
                {
                  "kind": "Reference",
                  "text": "NftContract",
                  "canonicalReference": "exploring-pioneer!NftContract:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!BaseNft#tokenId:member",
              "docComment": "/**\n * The NFT token ID as a hex string\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly tokenId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!BaseNft#tokenType:member",
              "docComment": "/**\n * The type of ERC token, if known.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly tokenType: "
                },
                {
                  "kind": "Reference",
                  "text": "NftTokenType",
                  "canonicalReference": "exploring-pioneer!NftTokenType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!checkOwnership:function(1)",
          "docComment": "/**\n * Checks that the provided owner address owns one of more of the provided NFTs.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param owner - The owner address to check.\n *\n * @param contractAddresses - An array of NFT contract addresses to check ownership for.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function checkOwnership(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", owner: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", contractAddresses: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "owner",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "contractAddresses",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "checkOwnership"
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!CollectionBaseNftsResponse:interface",
          "docComment": "/**\n * The response object for the {@link (getNftsForCollection:1)} function. The object contains the NFTs without metadata inside the collection.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollectionBaseNftsResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "CollectionBaseNftsResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!CollectionBaseNftsResponse#nfts:member",
              "docComment": "/**\n * An array of NFTs without metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nfts: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseNft",
                  "canonicalReference": "exploring-pioneer!BaseNft:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nfts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!CollectionBaseNftsResponse#pageKey:member",
              "docComment": "/**\n * Pagination token that can be passed into another request to fetch the next NFTs. If there is no page key, then there are no more NFTs to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!CollectionNftsResponse:interface",
          "docComment": "/**\n * The response object for the {@link (getNftsForCollection:2)} function. The object contains the NFTs with metadata inside the collection.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollectionNftsResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "CollectionNftsResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!CollectionNftsResponse#nfts:member",
              "docComment": "/**\n * An array of NFTs with metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nfts: "
                },
                {
                  "kind": "Reference",
                  "text": "Nft",
                  "canonicalReference": "exploring-pioneer!Nft:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nfts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!CollectionNftsResponse#pageKey:member",
              "docComment": "/**\n * Pagination token that can be passed into another request to fetch the next NFTs. If there is no page key, then there are no more NFTs to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!ERC1155Metadata:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ERC1155Metadata "
            }
          ],
          "releaseTag": "Public",
          "name": "ERC1155Metadata",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!ERC1155Metadata#tokenId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!ERC1155Metadata#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!fromHex:function(1)",
          "docComment": "/**\n * Converts a hex string to a decimal number.\n *\n * @param hexString - The hex string to convert.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fromHex(hexString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "hexString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "fromHex"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getAssetTransfers:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getAssetTransfers(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "AssetTransfersParams",
              "canonicalReference": "exploring-pioneer!AssetTransfersParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AssetTransfersResponse",
              "canonicalReference": "exploring-pioneer!AssetTransfersResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getAssetTransfers"
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!GetBaseNftsForCollectionParams:interface",
          "docComment": "/**\n * Parameters object for the {@link (getNftsForCollection:1)} and {@link (getNftsForCollectionPaginated:1)} functions.\n *\n * This interface is used to fetch NFTs without their associated metadata. To get Nfts with their associated metadata, use {@link GetNftsForCollectionParams}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetBaseNftsForCollectionParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetBaseNftsForCollectionParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsForCollectionParams#contractAddress:member",
              "docComment": "/**\n * The contract address of the collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contractAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsForCollectionParams#omitMetadata:member",
              "docComment": "/**\n * Optional boolean flag to omit NFT metadata. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "omitMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "omitMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsForCollectionParams#pageKey:member",
              "docComment": "/**\n * Optional page key from an existing {@link CollectionBaseNftsResponse} or {@link CollectionNftsResponse}to use for pagination.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!GetBaseNftsParams:interface",
          "docComment": "/**\n * Parameters object for the {@link (getNfts:1)} and {@link (getNftsPaginated:1)} functions.\n *\n * This interface is used to fetch NFTs without their associated metadata. To get Nfts with their associated metadata, use {@link GetNftsParams}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetBaseNftsParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetBaseNftsParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsParams#contractAddresses:member",
              "docComment": "/**\n * Optional list of contract addresses to filter the results by. Limit is 20.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddresses?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractAddresses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsParams#omitMetadata:member",
              "docComment": "/**\n * Optional boolean flag to include NFT metadata. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "omitMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "omitMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsParams#owner:member",
              "docComment": "/**\n * The owner address of the NFTs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "owner: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "owner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetBaseNftsParams#pageKey:member",
              "docComment": "/**\n * Optional page key from an existing {@link OwnedBaseNftsResponse} or {@link OwnedNftsResponse}to use for pagination.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftMetadata:function(1)",
          "docComment": "/**\n * Get the NFT metadata associated with the provided Base NFT.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param baseNft - The base NFT object to be used for the request.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftMetadata(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", baseNft: "
            },
            {
              "kind": "Reference",
              "text": "BaseNft",
              "canonicalReference": "exploring-pioneer!BaseNft:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Nft",
              "canonicalReference": "exploring-pioneer!Nft:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "baseNft",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftMetadata"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftMetadata:function(2)",
          "docComment": "/**\n * Get the NFT metadata associated with the provided parameters.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param contractAddress - The contract address of the NFT.\n *\n * @param tokenId - Token id of the NFT as a hex string or integer.\n *\n * @param tokenType - Optionally specify the type of token to speed up the query.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftMetadata(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", contractAddress: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", tokenId: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ", tokenType?: "
            },
            {
              "kind": "Reference",
              "text": "NftTokenType",
              "canonicalReference": "exploring-pioneer!NftTokenType:enum"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Nft",
              "canonicalReference": "exploring-pioneer!Nft:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "contractAddress",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "tokenId",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "tokenType",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "getNftMetadata"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNfts:function(1)",
          "docComment": "/**\n * Get all base NFTs for an owner.\n *\n * This method returns the base NFTs that omit the associated metadata. To get all NFTs with their associated metadata, use {@link GetNftsParams}.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNfts(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetBaseNftsParams",
              "canonicalReference": "exploring-pioneer!GetBaseNftsParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OwnedBaseNftsResponse",
              "canonicalReference": "exploring-pioneer!OwnedBaseNftsResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNfts"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNfts:function(2)",
          "docComment": "/**\n * Get all NFTs for an owner.\n *\n * This method returns the full NFTs in the contract. To get all NFTs without their associated metadata, use {@link GetBaseNftsParams}.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNfts(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetNftsParams",
              "canonicalReference": "exploring-pioneer!GetNftsParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OwnedNftsResponse",
              "canonicalReference": "exploring-pioneer!OwnedNftsResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNfts"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftsForCollection:function(1)",
          "docComment": "/**\n * Get all base NFTs for a given contract address.\n *\n * This method returns the base NFTs that omit the associated metadata. To get all NFTs with their associated metadata, use {@link GetNftsForCollectionParams}.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftsForCollection(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetBaseNftsForCollectionParams",
              "canonicalReference": "exploring-pioneer!GetBaseNftsForCollectionParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CollectionBaseNftsResponse",
              "canonicalReference": "exploring-pioneer!CollectionBaseNftsResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftsForCollection"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftsForCollection:function(2)",
          "docComment": "/**\n * Get all NFTs for a given contract address.\n *\n * This method returns the full NFTs in the contract. To get all NFTs without their associated metadata, use {@link GetBaseNftsForCollectionParams}.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request. or {@link CollectionNftsResponse} response.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftsForCollection(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetNftsForCollectionParams",
              "canonicalReference": "exploring-pioneer!GetNftsForCollectionParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CollectionNftsResponse",
              "canonicalReference": "exploring-pioneer!CollectionNftsResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftsForCollection"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftsForCollectionPaginated:function(1)",
          "docComment": "/**\n * Fetches all base NFTs for a given contract address and yields them in an async iterable.\n *\n * This method returns the base NFTs that omit the associated metadata and pages through all page keys until all NFTs have been fetched. To get all NFTs with their associated metadata, use {@link GetNftsForCollectionParams}.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftsForCollectionPaginated(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetBaseNftsForCollectionParams",
              "canonicalReference": "exploring-pioneer!GetBaseNftsForCollectionParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AsyncIterable",
              "canonicalReference": "!AsyncIterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BaseNft",
              "canonicalReference": "exploring-pioneer!BaseNft:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftsForCollectionPaginated"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftsForCollectionPaginated:function(2)",
          "docComment": "/**\n * Fetches all NFTs for a given contract address and yields them in an async iterable.\n *\n * This method returns the full NFTs in the contract and pages through all page keys until all NFTs have been fetched. To get all NFTs without their associated metadata, use {@link GetBaseNftsForCollectionParams}.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftsForCollectionPaginated(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetNftsForCollectionParams",
              "canonicalReference": "exploring-pioneer!GetNftsForCollectionParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AsyncIterable",
              "canonicalReference": "!AsyncIterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Nft",
              "canonicalReference": "exploring-pioneer!Nft:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftsForCollectionPaginated"
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!GetNftsForCollectionParams:interface",
          "docComment": "/**\n * Parameters object for the {@link (getNftsForCollection:2)} and {@link (getNftsForCollectionPaginated:2)} functions.\n *\n * This interface is used to fetch NFTs with their associated metadata. To get Nfts without their associated metadata, use {@link GetBaseNftsForCollectionParams}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetNftsForCollectionParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetNftsForCollectionParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsForCollectionParams#contractAddress:member",
              "docComment": "/**\n * The contract address of the collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contractAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsForCollectionParams#omitMetadata:member",
              "docComment": "/**\n * Optional boolean flag to omit NFT metadata. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "omitMetadata?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "omitMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsForCollectionParams#pageKey:member",
              "docComment": "/**\n * Optional page key from an existing {@link CollectionBaseNftsResponse} or {@link CollectionNftsResponse}to use for pagination.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftsPaginated:function(1)",
          "docComment": "/**\n * Fetches all NFTs for a given owner and yields them in an async iterable.\n *\n * This method returns the base NFTs that omit the associated metadata and pages through all page keys until all NFTs have been fetched.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftsPaginated(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetBaseNftsParams",
              "canonicalReference": "exploring-pioneer!GetBaseNftsParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AsyncIterable",
              "canonicalReference": "!AsyncIterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OwnedBaseNft",
              "canonicalReference": "exploring-pioneer!OwnedBaseNft:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftsPaginated"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getNftsPaginated:function(2)",
          "docComment": "/**\n * Fetches all NFTs for a given owner and yields them in an async iterable.\n *\n * This method returns the full NFT for the owner and pages through all page keys until all NFTs have been fetched.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param params - The parameters to use for the request.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNftsPaginated(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "GetNftsParams",
              "canonicalReference": "exploring-pioneer!GetNftsParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AsyncIterable",
              "canonicalReference": "!AsyncIterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OwnedNft",
              "canonicalReference": "exploring-pioneer!OwnedNft:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getNftsPaginated"
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!GetNftsParams:interface",
          "docComment": "/**\n * Parameters object for the {@link (getNfts:2)} and {@link (getNftsPaginated:2)} functions.\n *\n * This interface is used to fetch NFTs with their associated metadata. To get Nfts without their associated metadata, use {@link GetBaseNftsParams}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetNftsParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetNftsParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsParams#contractAddresses:member",
              "docComment": "/**\n * Optional list of contract addresses to filter the results by. Limit is 20.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddresses?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractAddresses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsParams#omitMetadata:member",
              "docComment": "/**\n * Optional boolean flag to omit NFT metadata. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "omitMetadata?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "omitMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsParams#owner:member",
              "docComment": "/**\n * The owner address of the NFTs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "owner: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "owner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetNftsParams#pageKey:member",
              "docComment": "/**\n * Optional page key from an existing {@link OwnedBaseNftsResponse} or {@link OwnedNftsResponse}to use for pagination.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getOwnersForToken:function(1)",
          "docComment": "/**\n * Gets all the owners for a given NFT contract address and token ID.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param contractAddress - The NFT contract address.\n *\n * @param tokenId - Token id of the NFT as a hex string or integer.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getOwnersForToken(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", contractAddress: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", tokenId: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GetOwnersForTokenResponse",
              "canonicalReference": "exploring-pioneer!GetOwnersForTokenResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "contractAddress",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "tokenId",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "getOwnersForToken"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getOwnersForToken:function(2)",
          "docComment": "/**\n * Gets all the owners for a given NFT.\n *\n * @param alchemy - The Alchemy SDK instance.\n *\n * @param nft - The NFT object to get the owners for.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getOwnersForToken(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", nft: "
            },
            {
              "kind": "Reference",
              "text": "BaseNft",
              "canonicalReference": "exploring-pioneer!BaseNft:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GetOwnersForTokenResponse",
              "canonicalReference": "exploring-pioneer!GetOwnersForTokenResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "nft",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getOwnersForToken"
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!GetOwnersForTokenResponse:interface",
          "docComment": "/**\n * The response object for the {@link getOwnersForToken}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetOwnersForTokenResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "GetOwnersForTokenResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!GetOwnersForTokenResponse#owners:member",
              "docComment": "/**\n * An array of owner addresses for the provided token.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly owners: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "owners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getTokenAllowance:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getTokenAllowance(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "TokenAllowanceParams",
              "canonicalReference": "exploring-pioneer!TokenAllowanceParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TokenAllowanceResponse",
              "canonicalReference": "exploring-pioneer!TokenAllowanceResponse:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getTokenAllowance"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getTokenBalances:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getTokenBalances(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", address: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", contractAddresses?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TokenBalancesResponse",
              "canonicalReference": "exploring-pioneer!TokenBalancesResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "address",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "contractAddresses",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "getTokenBalances"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getTokenMetadata:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getTokenMetadata(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", address: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TokenMetadataResponse",
              "canonicalReference": "exploring-pioneer!TokenMetadataResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "address",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getTokenMetadata"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!getTransactionReceipts:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getTransactionReceipts(alchemy: "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "TransactionReceiptsParams",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsParams:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TransactionReceiptsResponse",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "alchemy",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getTransactionReceipts"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!initializeAlchemy:function(1)",
          "docComment": "/**\n * Entry point into the Alchemy SDK.\n *\n * @param config - Configuration object for the Alchemy SDK\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function initializeAlchemy(config?: "
            },
            {
              "kind": "Reference",
              "text": "AlchemyConfig",
              "canonicalReference": "exploring-pioneer!AlchemyConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Alchemy",
              "canonicalReference": "exploring-pioneer!Alchemy:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "initializeAlchemy"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!isHex:function(1)",
          "docComment": "/**\n * Checks if a value is a hex string.\n *\n * @param possibleHexString - The value to check.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isHex(possibleHexString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "possibleHexString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isHex"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "exploring-pioneer!LogLevel:type",
          "docComment": "/**\n * The level of verbosity for the logger.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LogLevelString = "
            },
            {
              "kind": "Content",
              "text": "'debug' | 'info' | 'warn' | 'error' | 'silent'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LogLevel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "exploring-pioneer!Network:enum",
          "docComment": "/**\n * The supported networks by Alchemy. Note that some functions are not available on all networks. Please refer to the Alchemy documentation for more details.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum Network "
            }
          ],
          "releaseTag": "Public",
          "name": "Network",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ARB_MAINNET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ARB_MAINNET = "
                },
                {
                  "kind": "Content",
                  "text": "\"arb-mainnet\""
                }
              ],
              "releaseTag": "Public",
              "name": "ARB_MAINNET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ARB_RINKEBY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ARB_RINKEBY = "
                },
                {
                  "kind": "Content",
                  "text": "\"arb-rinkeby\""
                }
              ],
              "releaseTag": "Public",
              "name": "ARB_RINKEBY",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ETH_GOERLI:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ETH_GOERLI = "
                },
                {
                  "kind": "Content",
                  "text": "\"eth-goerli\""
                }
              ],
              "releaseTag": "Public",
              "name": "ETH_GOERLI",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ETH_KOVAN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ETH_KOVAN = "
                },
                {
                  "kind": "Content",
                  "text": "\"eth-kovan\""
                }
              ],
              "releaseTag": "Public",
              "name": "ETH_KOVAN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ETH_MAINNET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ETH_MAINNET = "
                },
                {
                  "kind": "Content",
                  "text": "\"eth-mainnet\""
                }
              ],
              "releaseTag": "Public",
              "name": "ETH_MAINNET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ETH_RINKEBY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ETH_RINKEBY = "
                },
                {
                  "kind": "Content",
                  "text": "\"eth-rinkeby\""
                }
              ],
              "releaseTag": "Public",
              "name": "ETH_RINKEBY",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.ETH_ROPSTEN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ETH_ROPSTEN = "
                },
                {
                  "kind": "Content",
                  "text": "\"eth-ropsten\""
                }
              ],
              "releaseTag": "Public",
              "name": "ETH_ROPSTEN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.MATIC_MAINNET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MATIC_MAINNET = "
                },
                {
                  "kind": "Content",
                  "text": "\"polygon-mainnet\""
                }
              ],
              "releaseTag": "Public",
              "name": "MATIC_MAINNET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.MATIC_MUMBAI:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MATIC_MUMBAI = "
                },
                {
                  "kind": "Content",
                  "text": "\"polygon-mumbai\""
                }
              ],
              "releaseTag": "Public",
              "name": "MATIC_MUMBAI",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.OPT_KOVAN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OPT_KOVAN = "
                },
                {
                  "kind": "Content",
                  "text": "\"opt-kovan\""
                }
              ],
              "releaseTag": "Public",
              "name": "OPT_KOVAN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!Network.OPT_MAINNET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OPT_MAINNET = "
                },
                {
                  "kind": "Content",
                  "text": "\"opt-mainnet\""
                }
              ],
              "releaseTag": "Public",
              "name": "OPT_MAINNET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "exploring-pioneer!Nft:class",
          "docComment": "/**\n * Alchemy representation of an NFT.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Nft extends "
            },
            {
              "kind": "Reference",
              "text": "BaseNft",
              "canonicalReference": "exploring-pioneer!BaseNft:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Nft",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#description:member",
              "docComment": "/**\n * The NFT description.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly description: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#media:member",
              "docComment": "/**\n * URIs for accessing the NFT's media assets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly media: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenUri",
                  "canonicalReference": "exploring-pioneer!TokenUri:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "media",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#metadataError:member",
              "docComment": "/**\n * Holds an error message if there was an issue fetching metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly metadataError: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadataError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#rawMetadata:member",
              "docComment": "/**\n * The raw metadata fetched from the metadata URL specified by the NFT. The field is undefined if Alchemy was unable to fetch metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rawMetadata: "
                },
                {
                  "kind": "Reference",
                  "text": "NftMetadata",
                  "canonicalReference": "exploring-pioneer!NftMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#timeLastUpdated:member",
              "docComment": "/**\n * When the NFT was last updated in the blockchain. Represented in ISO-8601 format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly timeLastUpdated: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeLastUpdated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#title:member",
              "docComment": "/**\n * The NFT title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "exploring-pioneer!Nft#tokenUri:member",
              "docComment": "/**\n * URIs for accessing the NFT's metadata blob.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly tokenUri: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenUri",
                  "canonicalReference": "exploring-pioneer!TokenUri:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!NftContract:interface",
          "docComment": "/**\n * Represents an NFT contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NftContract "
            }
          ],
          "releaseTag": "Public",
          "name": "NftContract",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftContract#address:member",
              "docComment": "/**\n * The NFT contract address.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!NftMetadata:interface",
          "docComment": "/**\n * Represents NFT metadata that holds fields. Note that since there is no standard metadata format, the fields are not guaranteed to be present.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NftMetadata extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any> "
            }
          ],
          "releaseTag": "Public",
          "name": "NftMetadata",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftMetadata#attributes:member",
              "docComment": "/**\n * The traits, attributes, and characteristics for the NFT asset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attributes?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftMetadata#background_color:member",
              "docComment": "/**\n * Background color of the NFT item. Usually defined as a 6 character hex string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background_color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background_color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftMetadata#description:member",
              "docComment": "/**\n * A human-readable description of the NFT asset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftMetadata#external_url:member",
              "docComment": "/**\n * The image URL that appears along the top of the NFT asset page. This tends to be the highest resolution image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "external_url?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "external_url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftMetadata#image:member",
              "docComment": "/**\n * URL to the NFT asset image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!NftMetadata#name:member",
              "docComment": "/**\n * Name of the NFT asset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "exploring-pioneer!NftTokenType:enum",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum NftTokenType "
            }
          ],
          "releaseTag": "Public",
          "name": "NftTokenType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!NftTokenType.ERC1155:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ERC1155 = "
                },
                {
                  "kind": "Content",
                  "text": "\"erc1155\""
                }
              ],
              "releaseTag": "Public",
              "name": "ERC1155",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!NftTokenType.ERC721:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ERC721 = "
                },
                {
                  "kind": "Content",
                  "text": "\"erc721\""
                }
              ],
              "releaseTag": "Public",
              "name": "ERC721",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "exploring-pioneer!NftTokenType.UNKNOWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UNKNOWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"unknown\""
                }
              ],
              "releaseTag": "Public",
              "name": "UNKNOWN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!OwnedBaseNft:interface",
          "docComment": "/**\n * Represents an NFT without metadata owned by an address.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OwnedBaseNft extends "
            },
            {
              "kind": "Reference",
              "text": "BaseNft",
              "canonicalReference": "exploring-pioneer!BaseNft:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OwnedBaseNft",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedBaseNft#balance:member",
              "docComment": "/**\n * The token balance of the NFT.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly balance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "balance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!OwnedBaseNftsResponse:interface",
          "docComment": "/**\n * The response object for the {@link (getNfts:1)} and {@link (getNftsPaginated:1)} functions. The object contains the NFTs without metadata owned by the provided address, along with pagination information and the total count.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OwnedBaseNftsResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "OwnedBaseNftsResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedBaseNftsResponse#ownedNfts:member",
              "docComment": "/**\n * The NFTs owned by the provided address.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ownedNfts: "
                },
                {
                  "kind": "Reference",
                  "text": "OwnedBaseNft",
                  "canonicalReference": "exploring-pioneer!OwnedBaseNft:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ownedNfts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedBaseNftsResponse#pageKey:member",
              "docComment": "/**\n * Pagination token that can be passed into another request to fetch the next NFTs. If there is no page key, then there are no more NFTs to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedBaseNftsResponse#totalCount:member",
              "docComment": "/**\n * The total count of NFTs owned by the provided address.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly totalCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!OwnedNft:interface",
          "docComment": "/**\n * Represents an NFT with metadata owned by an address.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OwnedNft extends "
            },
            {
              "kind": "Reference",
              "text": "Nft",
              "canonicalReference": "exploring-pioneer!Nft:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OwnedNft",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedNft#balance:member",
              "docComment": "/**\n * The token balance of the NFT.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly balance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "balance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!OwnedNftsResponse:interface",
          "docComment": "/**\n * The response object for the {@link (getNfts:2)} and {@link (getNftsPaginated:2)} functions. The object contains the NFTs with metadata owned by the provided address, along with pagination information and the total count.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OwnedNftsResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "OwnedNftsResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedNftsResponse#ownedNfts:member",
              "docComment": "/**\n * The NFTs owned by the provided address.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ownedNfts: "
                },
                {
                  "kind": "Reference",
                  "text": "OwnedNft",
                  "canonicalReference": "exploring-pioneer!OwnedNft:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ownedNfts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedNftsResponse#pageKey:member",
              "docComment": "/**\n * Pagination token that can be passed into another request to fetch the next NFTs. If there is no page key, then there are no more NFTs to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pageKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!OwnedNftsResponse#totalCount:member",
              "docComment": "/**\n * The total count of NFTs owned by the provided address.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly totalCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!RawContract:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RawContract "
            }
          ],
          "releaseTag": "Public",
          "name": "RawContract",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!RawContract#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!RawContract#decimal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decimal: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "decimal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!RawContract#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!setLogLevel:function(1)",
          "docComment": "/**\n * Configures the verbosity of logging. The default log level is `info`.\n *\n * @param logLevel - The verbosity of logging. Can be any of the following values:\n *\n * - `debug`: The most verbose logging level. - `info`: The default logging level. - `warn`: A logging level for non-critical issues. - `error`: A logging level for critical issues. - `silent`: Turn off all logging.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setLogLevel(logLevel: "
            },
            {
              "kind": "Reference",
              "text": "LogLevelString",
              "canonicalReference": "exploring-pioneer!LogLevelString:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logLevel",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "setLogLevel"
        },
        {
          "kind": "Function",
          "canonicalReference": "exploring-pioneer!toHex:function(1)",
          "docComment": "/**\n * Converts a number to a hex string.\n *\n * @param num - The number to convert to hex.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toHex(num: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "num",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "toHex"
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TokenAllowanceParams:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenAllowanceParams "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenAllowanceParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenAllowanceParams#contract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contract: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenAllowanceParams#owner:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "owner: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "owner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenAllowanceParams#spender:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spender: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "exploring-pioneer!TokenAllowanceResponse:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TokenAllowanceResponse = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TokenAllowanceResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "exploring-pioneer!TokenBalance:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TokenBalance = "
            },
            {
              "kind": "Reference",
              "text": "TokenBalanceSuccess",
              "canonicalReference": "exploring-pioneer!TokenBalanceSuccess:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TokenBalanceFailure",
              "canonicalReference": "exploring-pioneer!TokenBalanceFailure:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TokenBalance",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TokenBalanceFailure:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenBalanceFailure "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenBalanceFailure",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalanceFailure#contractAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contractAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalanceFailure#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalanceFailure#tokenBalance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenBalance: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenBalance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TokenBalancesResponse:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenBalancesResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenBalancesResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalancesResponse#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalancesResponse#tokenBalances:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenBalances: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenBalance",
                  "canonicalReference": "exploring-pioneer!TokenBalance:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenBalances",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TokenBalanceSuccess:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenBalanceSuccess "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenBalanceSuccess",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalanceSuccess#contractAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contractAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalanceSuccess#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenBalanceSuccess#tokenBalance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenBalance: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenBalance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TokenMetadataResponse:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenMetadataResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenMetadataResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenMetadataResponse#decimals:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decimals: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "decimals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenMetadataResponse#logo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logo: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenMetadataResponse#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenMetadataResponse#symbol:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "symbol: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "symbol",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TokenUri:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenUri "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenUri",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenUri#gateway:member",
              "docComment": "/**\n * Public gateway URI for the raw URI. Generally offers better performance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gateway: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gateway",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TokenUri#raw:member",
              "docComment": "/**\n * URI for the location of the NFT's original metadata blob.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "raw: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "raw",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TransactionReceiptsBlockHash:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TransactionReceiptsBlockHash "
            }
          ],
          "releaseTag": "Public",
          "name": "TransactionReceiptsBlockHash",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsBlockHash#blockHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockHash: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blockHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TransactionReceiptsBlockNumber:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TransactionReceiptsBlockNumber "
            }
          ],
          "releaseTag": "Public",
          "name": "TransactionReceiptsBlockNumber",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsBlockNumber#blockNumber:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockNumber: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blockNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "exploring-pioneer!TransactionReceiptsParams:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TransactionReceiptsParams = "
            },
            {
              "kind": "Reference",
              "text": "TransactionReceiptsBlockNumber",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsBlockNumber:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TransactionReceiptsBlockHash",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsBlockHash:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TransactionReceiptsParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "exploring-pioneer!TransactionReceiptsResponse:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TransactionReceiptsResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "TransactionReceiptsResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "exploring-pioneer!TransactionReceiptsResponse#receipts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "receipts: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionReceipt",
                  "canonicalReference": "@ethersproject/abstract-provider!TransactionReceipt:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "receipts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
